IF0:
push 1
ret
back
IFN0:
va_split
push n
push 1
min
call Fibonacci
va_split
push n
push 2
min
call Fibonacci
add
ret
back
WHILE1:
va_split
push r
call print
pop
va_split
push c
neg
neg
neg
push 1
neg
neg
min
neg
call print
pop
va_split
push " "
call print
pop
push c
push c
push 1
add
pop c
pop
back
WHILE0:
push c
push 0
pop c
pop
:jmp1
push c
push r
lt
while WHILE1
while_if jmp1
pop
va_split
push "\n"
call print
pop
push r
push r
push 0
push 1
neg
neg
push 1
min
push 11
min
push 1
neg
neg
neg
min
or
add
pop r
pop
back
func Fibonacci:
alc n
pop n
push n
push 1
eq
push n
push 2
eq
or
if IF0
ifn IFN0
pop
func_back
alc r
alc c
push r
push 0
pop r
pop
push c
push 0
pop c
pop
:jmp0
push r
push 8
lt
while WHILE0
while_if jmp0
pop
push r
push 99
neg
neg
push 88
neg
neg
neg
mul
push 1
and
push 5
push 2
mul
add
pop r
pop
va_split
push r
call print
pop
va_split
push "th term of Fibonacci is "
call print
pop
va_split
va_split
push r
call Fibonacci
call print
pop
va_split
push "\n"
call print
pop
va_split
push "Print a table of numbers\n"
call print
pop
exit